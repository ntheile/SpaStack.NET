// JayData 1.3.4
// Dual licensed under MIT and GPL v2
// Copyright JayStack Technologies (http://jaydata.org/licensing)
//
// JayData is a standards-based, cross-platform Javascript library and a set of
// practices to access and manipulate data from various online and offline sources.
//
// Credits:
//     Hajnalka Battancs, Dániel József, János Roden, László Horváth, Péter Nochta
//     Péter Zentai, Róbert Bónay, Szabolcs Czinege, Viktor Borza, Viktor Lázár,
//     Zoltán Gyebrovszki, Gábor Dolla
//
// More info: http://jaydata.org
$C("$data.storageProviders.Storm.StormProvider",$data.StorageProviderBase,null,{constructor:function(a,h){this.context=h;this.providerConfiguration=$data.typeSystem.extend({url:"http://localhost:3000/"},a)},initializeStore:function(a){a=$data.typeSystem.createCallbackSetting(a);a.success(this.context)},executeQuery:function(a,h){callBack=$data.typeSystem.createCallbackSetting(h);a.modelBinderConfig={};Container.createModelBinderConfigCompiler(a,this.includes,!1).Visit(a.expression);var b=(new $data.storageProviders.InMemory.InMemoryCompiler(this)).compile(a),
e=a.getEntitySets().map(function(a){return a.name}),c;for(c in b)if(0==c.indexOf("$"))if("function"===typeof b[c])b[c]=b[c].toString().replace("function anonymous","function").replace(/\n/g," ");else if(b[c]instanceof Array&&"$order"===c)for(var f=0;f<b[c].length;f++){if("function"===typeof b[c][f]){var d=b[c][f].ASC;b[c][f]=b[c][f].toString().replace("function anonymous","function").replace(/\n/g," ")}else d=b[c][f].ASC;b[c][f]={fn:b[c][f],direction:d}}$data.ajax({url:this.providerConfiguration.url,
dataType:"json",data:{entitySet:e[0],expression:b},success:function(b){a.rawDataList="undefined"!==typeof b.length?b:[{cnt:b}];a.context=this;callBack.success(a)},error:function(a,b,c){b={};try{b=JSON.parse(a.responseText).error}catch(d){b=c+": "+a.responseText}callBack.error(b)}})},saveChanges:function(a,h){if(h.length){for(var b=this.buildIndependentBlocks(h),e=[],c={},f=[],d=0;d<b.length;d++)for(var g=0;g<b[d].length;g++){e.push(b[d][g].data);var i=c[b[d][g].entitySet.name];i||(i={},c[b[d][g].entitySet.name]=
i);switch(b[d][g].data.entityState){case $data.EntityState.Unchanged:continue;case $data.EntityState.Added:case $data.EntityState.Modified:case $data.EntityState.Deleted:f.push({entitySet:b[d][g].entitySet.name,entityState:b[d][g].data.entityState,entity:b[d][g].data,data:this.save_getInitData(b[d][g],e)});break;default:Guard.raise(new Exception("Not supported Entity state"))}}$data.ajax({url:this.providerConfiguration.url,type:"post",dataType:"json",data:{items:JSON.stringify(f.map(function(a){return{entitySet:a.entitySet,
entityState:a.entityState,data:a.data}}))},success:function(b){for(var c=0;c<b.items.length;c++){var d=b.items[c],e;for(e in d)f[c].entity[e]=d[e]}a.success(b.__count)},error:function(b,c,d){c={};try{c=JSON.parse(b.responseText).error}catch(e){c=d+": "+b.responseText}a.error(c)}})}else a.success(0)},save_getInitData:function(a,h){a.physicalData=this.context._storageModel.getStorageModel(a.data.getType()).PhysicalType.convertTo(a.data,h);var b={};a.physicalData.getType().memberDefinitions.asArray().forEach(function(e){if(e.kind==
$data.MemberTypes.navProperty||e.kind==$data.MemberTypes.complexProperty||e.kind==$data.MemberTypes.property&&!e.notMapped)b[e.name]=a.physicalData[e.name]},this);return b},supportedDataTypes:{value:[$data.Integer,$data.String,$data.Number,$data.Blob,$data.Boolean,$data.Date,$data.ObjectID],writable:!1},supportedBinaryOperators:{value:{equal:{mapTo:" == ",dataType:"boolean",allowedIn:[$data.Expressions.FilterExpression,$data.Expressions.OrderExpression]},notEqual:{mapTo:" != ",dataType:"boolean",
allowedIn:[$data.Expressions.FilterExpression,$data.Expressions.OrderExpression]},equalTyped:{mapTo:" === ",dataType:"boolean",allowedIn:[$data.Expressions.FilterExpression,$data.Expressions.OrderExpression]},notEqualTyped:{mapTo:" !== ",dataType:"boolean",allowedIn:[$data.Expressions.FilterExpression,$data.Expressions.OrderExpression]},greaterThan:{mapTo:" > ",dataType:"boolean",allowedIn:[$data.Expressions.FilterExpression,$data.Expressions.OrderExpression]},greaterThanOrEqual:{mapTo:" >= ",dataType:"boolean",
allowedIn:[$data.Expressions.FilterExpression,$data.Expressions.OrderExpression]},lessThan:{mapTo:" < ",dataType:"boolean",allowedIn:[$data.Expressions.FilterExpression,$data.Expressions.OrderExpression]},lessThenOrEqual:{mapTo:" <= ",dataType:"boolean",allowedIn:[$data.Expressions.FilterExpression,$data.Expressions.OrderExpression]},or:{mapTo:" || ",dataType:"boolean",allowedIn:[$data.Expressions.FilterExpression,$data.Expressions.OrderExpression]},and:{mapTo:" && ",dataType:"boolean",allowedIn:[$data.Expressions.FilterExpression,
$data.Expressions.OrderExpression]},"in":{mapTo:" in ",allowedIn:[$data.Expressions.FilterExpression]}}},supportedUnaryOperators:{value:{not:{mapTo:"!"}}},supportedSetOperations:{value:{filter:{},map:{},length:{},forEach:{},toArray:{},single:{},take:{},skip:{},orderBy:{},orderByDescending:{},first:{},include:{}},enumerable:!0,writable:!0},fieldConverter:{value:{fromDb:{"$data.Integer":function(a){return a},"$data.Number":function(a){return a},"$data.Date":function(a){return"string"===typeof a?new Date(a):
a},"$data.String":function(a){return a},"$data.Boolean":function(a){return a},"$data.Blob":function(a){return a},"$data.Object":function(a){return void 0===a?new $data.Object:JSON.parse(a)},"$data.Array":function(a){return void 0===a?new $data.Array:JSON.parse(a)},"$data.ObjectID":function(a){return a}},toDb:{"$data.Integer":function(a){return a},"$data.Number":function(a){return a},"$data.Date":function(a){return'ISODate("'+a.toISOString()+'")'},"$data.String":function(a){return'"'+a+'"'},"$data.Boolean":function(a){return a},
"$data.Blob":function(a){return a},"$data.Object":function(a){return JSON.stringify(a)},"$data.Array":function(a){return JSON.stringify(a)},"$data.ObjectID":function(a){return'"'+a+'"'}}}}},{isSuppported:{get:function(){return"XMLHttpRequest"in window}}});$data.storageProviders.Storm.StormProvider.isSupported&&$data.StorageProviderBase.registerProvider("storm",$data.storageProviders.Storm.StormProvider);

// JayData 1.3.4
// Dual licensed under MIT and GPL v2
// Copyright JayStack Technologies (http://jaydata.org/licensing)
//
// JayData is a standards-based, cross-platform Javascript library and a set of
// practices to access and manipulate data from various online and offline sources.
//
// Credits:
//     Hajnalka Battancs, Dániel József, János Roden, László Horváth, Péter Nochta
//     Péter Zentai, Róbert Bónay, Szabolcs Czinege, Viktor Borza, Viktor Lázár,
//     Zoltán Gyebrovszki, Gábor Dolla
//
// More info: http://jaydata.org
$data.IndexedDBConverter={fromDb:{"$data.Byte":$data.Container.proxyConverter,"$data.SByte":$data.Container.proxyConverter,"$data.Decimal":$data.Container.proxyConverter,"$data.Float":$data.Container.proxyConverter,"$data.Int16":$data.Container.proxyConverter,"$data.Int64":$data.Container.proxyConverter,"$data.Integer":$data.Container.proxyConverter,"$data.Int32":$data.Container.proxyConverter,"$data.Number":$data.Container.proxyConverter,"$data.Date":$data.Container.proxyConverter,"$data.DateTimeOffset":$data.Container.proxyConverter,
"$data.Time":$data.Container.proxyConverter,"$data.String":$data.Container.proxyConverter,"$data.Boolean":$data.Container.proxyConverter,"$data.Blob":function(a){return a?$data.Container.convertTo(a,$data.Blob):a},"$data.Array":function(a){return void 0===a?new $data.Array:a},"$data.Object":$data.Container.proxyConverter,"$data.Guid":function(a){return a?$data.parseGuid(a).toString():a},"$data.GeographyPoint":function(a){return a?new $data.GeographyPoint(a):a},"$data.GeographyLineString":function(a){return a?
new $data.GeographyLineString(a):a},"$data.GeographyPolygon":function(a){return a?new $data.GeographyPolygon(a):a},"$data.GeographyMultiPoint":function(a){return a?new $data.GeographyMultiPoint(a):a},"$data.GeographyMultiLineString":function(a){return a?new $data.GeographyMultiLineString(a):a},"$data.GeographyMultiPolygon":function(a){return a?new $data.GeographyMultiPolygon(a):a},"$data.GeographyCollection":function(a){return a?new $data.GeographyCollection(a):a},"$data.GeometryPoint":function(a){return a?
new $data.GeometryPoint(a):a},"$data.GeometryLineString":function(a){return a?new $data.GeometryLineString(a):a},"$data.GeometryPolygon":function(a){return a?new $data.GeometryPolygon(a):a},"$data.GeometryMultiPoint":function(a){return a?new $data.GeometryMultiPoint(a):a},"$data.GeometryMultiLineString":function(a){return a?new $data.GeometryMultiLineString(a):a},"$data.GeometryMultiPolygon":function(a){return a?new $data.GeometryMultiPolygon(a):a},"$data.GeometryCollection":function(a){return a?
new $data.GeometryCollection(a):a}},toDb:{"$data.Byte":$data.Container.proxyConverter,"$data.SByte":$data.Container.proxyConverter,"$data.Decimal":$data.Container.proxyConverter,"$data.Float":$data.Container.proxyConverter,"$data.Int16":$data.Container.proxyConverter,"$data.Int64":$data.Container.proxyConverter,"$data.Integer":$data.Container.proxyConverter,"$data.Int32":$data.Container.proxyConverter,"$data.Number":$data.Container.proxyConverter,"$data.Date":$data.Container.proxyConverter,"$data.DateTimeOffset":$data.Container.proxyConverter,
"$data.Time":$data.Container.proxyConverter,"$data.String":$data.Container.proxyConverter,"$data.Boolean":$data.Container.proxyConverter,"$data.Blob":function(a){return a?$data.Blob.toString(a):a},"$data.Array":function(a){return a?JSON.parse(JSON.stringify(a)):a},"$data.Object":$data.Container.proxyConverter,"$data.Guid":function(a){return a?a.toString():a},"$data.GeographyPoint":function(a){return a},"$data.GeographyLineString":function(a){return a},"$data.GeographyPolygon":function(a){return a},
"$data.GeographyMultiPoint":function(a){return a},"$data.GeographyMultiLineString":function(a){return a},"$data.GeographyMultiPolygon":function(a){return a},"$data.GeographyCollection":function(a){return a},"$data.GeometryPoint":function(a){return a},"$data.GeometryLineString":function(a){return a},"$data.GeometryPolygon":function(a){return a},"$data.GeometryMultiPoint":function(a){return a},"$data.GeometryMultiLineString":function(a){return a},"$data.GeometryMultiPolygon":function(a){return a},"$data.GeometryCollection":function(a){return a}}};
$data.Class.define("$data.storageProviders.indexedDb.IndexedDBStorageProvider",$data.StorageProviderBase,null,{constructor:function(a,b){this.indexedDB=window.indexedDB||window.webkitIndexedDB||window.mozIndexedDB||window.msIndexedDB;this.IDBRequest=window.IDBRequest||window.webkitIDBRequest||window.mozIDBRequest||window.msIDBRequest;this.IDBTransaction=window.IDBTransaction||window.webkitIDBTransaction||window.mozIDBTransaction||window.msIDBTransaction;this.IDBTransactionType={READ_ONLY:"readonly",
READ_WRITE:"readwrite",VERSIONCHANGE:"versionchange"};"undefined"!==typeof this.IDBTransaction.READ_ONLY&&"undefined"!==typeof this.IDBTransaction.READ_WRITE&&(this.IDBTransactionType.READ_ONLY=this.IDBTransaction.READ_ONLY,this.IDBTransactionType.READ_WRITE=this.IDBTransaction.READ_WRITE);this.IDBKeyRange=window.IDBKeyRange||window.webkitIDBKeyRange||window.mozIDBKeyRange||window.msIDBKeyRange;this.IDBDatabaseException=window.IDBDatabaseException||window.webkitIDBDatabaseException||window.mozIDBDatabaseException||
window.msIDBDatabaseException;this.IDBOpenDBRequest=window.IDBOpenDBRequest||window.webkitIDBOpenDBRequest||window.mozIDBOpenDBRequest||window.msIDBOpenDBRequest;this.newVersionAPI=!(!window.IDBFactory||!IDBFactory.prototype.deleteDatabase);this.sequenceStore="__jayData_sequence";this.SqlCommands=[];this.context={};this.providerConfiguration=$data.typeSystem.extend({databaseName:$data.defaults.defaultDatabaseName,version:1,dbCreation:$data.storageProviders.DbCreationType.DropTableIfChanged,memoryOperations:!0},
a);this._setupExtensionMethods();b&&(this.originalContext=b.getType())},supportedBinaryOperators:{value:{equal:{mapTo:" == ",dataType:$data.Boolean},notEqual:{mapTo:" != ",dataType:$data.Boolean},equalTyped:{mapTo:" == ",dataType:$data.Boolean},notEqualTyped:{mapTo:" != ",dataType:$data.Boolean},greaterThan:{mapTo:" > ",dataType:$data.Boolean},greaterThanOrEqual:{mapTo:" >= ",dataType:$data.Boolean},lessThan:{mapTo:" < ",dataType:$data.Boolean},lessThenOrEqual:{mapTo:" <= ",dataType:$data.Boolean},
or:{mapTo:" || ",dataType:$data.Boolean},and:{mapTo:" && ",dataType:$data.Boolean}}},supportedSetOperations:{value:{length:{},toArray:{},forEach:{}},enumerable:!0,writable:!0},supportedFieldOperations:{value:{},enumerable:!0,writable:!0},supportedUnaryOperators:{value:{},enumerable:!0,writable:!0},_setupExtensionMethods:function(){var a=this.IDBRequest,b=this.IDBTransaction,c=this.IDBOpenDBRequest,d=function(a){"object"!==typeof a&&Guard.raise(new Exception("Invalid callbackSettings",null,a));for(var b in a)"undefined"===
typeof this[b]||"function"!==typeof a[b]||(this[b]=a[b]);return this};a&&"function"!==typeof a.prototype.setCallbacks&&(a.prototype.setCallbacks=d);b&&"function"!==typeof b.prototype.setCallbacks&&(b.prototype.setCallbacks=d);c&&"function"!==typeof c.prototype.setCallbacks&&(c.prototype.setCallbacks=d)},supportedDataTypes:{value:[$data.Integer,$data.Number,$data.Date,$data.String,$data.Boolean,$data.Blob,$data.Array,$data.Object,$data.Guid,$data.GeographyPoint,$data.GeographyLineString,$data.GeographyPolygon,
$data.GeographyMultiPoint,$data.GeographyMultiLineString,$data.GeographyMultiPolygon,$data.GeographyCollection,$data.GeometryPoint,$data.GeometryLineString,$data.GeometryPolygon,$data.GeometryMultiPoint,$data.GeometryMultiLineString,$data.GeometryMultiPolygon,$data.GeometryCollection,$data.Byte,$data.SByte,$data.Decimal,$data.Float,$data.Int16,$data.Int32,$data.Int64,$data.Time,$data.DateTimeOffset],writable:!1},fieldConverter:{value:$data.IndexedDBConverter},supportedAutoincrementKeys:{value:{"$data.Integer":!0,
"$data.Int32":!0,"$data.Guid":function(){return $data.createGuid()}}},_getObjectStoreDefinition:function(a){var b={storeName:a.TableName},a=a.PhysicalType.memberDefinitions.getKeyProperties();if(0==a.length)throw b=Error("Entity must have a key field: "+b.storeName),b.name="KeyNotFoundError",b;2<a.length&&a.some(function(a){return a.computed})&&Guard.raise("With multiple keys the computed field is not allowed: "+b.storeName,"MultipleComputedKeyFieldError");for(var c=0;c<a.length;c++){var d=Container.resolveName(a[c].type);
a[c].computed&&!this.supportedAutoincrementKeys[d]&&console.log("WARRNING! '"+d+"' not supported as computed Key!")}b.keyFields=a;return b},_getObjectStoreDefinitions:function(){var a=[],b=this;b.context._storageModel.forEach(function(c){c=b._getObjectStoreDefinition(c);a.push(c)});return a},_oldCreateDB:function(a,b,c){a.db.onversionchange=function(a){return a.target.close()};this._createDB(a.db,b);a.oncomplete=c},_createDB:function(a,b){for(var c=0;c<b.length;c++)b[c].dropIfExists&&a.objectStoreNames.contains(b[c].storeName)&&
a.deleteObjectStore(b[c].storeName);for(c=0;c<b.length;c++){var d=b[c];if(!a.objectStoreNames.contains(d.storeName)){var e={};if(1==d.keyFields.length){var e={keyPath:d.keyFields[0].name},f=Container.resolveName(d.keyFields[0].type);e.autoIncrement=this.supportedAutoincrementKeys[f]?!0:!1}else{e.key=[];for(c=0;c<d.keyFields.length;c++)e.key.push(d.keyFields[c].name)}a.createObjectStore(d.storeName,e)}}},_hasDbChanges:function(a,b,c){for(var d=!0,e=0;e<b.length;e++)d=d&&a.objectStoreNames.contains(b[e].storeName),
c&&(b[e].dropIfExists=!0,d=!1);return!d},onupgradeneeded:function(a){var b=this;return function(c){c=c.target.result;c.onversionchange=function(a){return a.target.close()};b._hasDbChanges(c,a,b.providerConfiguration.dbCreation==$data.storageProviders.DbCreationType.DropAllExistingTables)&&b._createDB(c,a)}},initializeStore:function(a){var a=$data.typeSystem.createCallbackSetting(a),b=this;this.initializeMemoryStore({success:function(){var c;try{c=b._getObjectStoreDefinitions()}catch(d){console.log(c);
a.error(d);return}b.indexedDB.open(b.providerConfiguration.databaseName).setCallbacks({onsuccess:function(d){d=d.target.result;d.onversionchange=function(a){return a.target.close()};var f=b._hasDbChanges(d,c,b.providerConfiguration.dbCreation==$data.storageProviders.DbCreationType.DropAllExistingTables);if(d.setVersion){if(""===d.version||f){d.setVersion((parseInt(d.version)||0)+1).setCallbacks({onsuccess:function(d){b._oldCreateDB(d.target.result,c,function(d){b.db=d.target.db;a.success(b.context)})},
onerror:function(){},onblocked:function(){}});return}}else if(f){d.close();d=parseInt(d.version)+1;b.indexedDB.open(b.providerConfiguration.databaseName,d).setCallbacks({onsuccess:function(d){b.db=d.target.result;a.success(b.context)},onupgradeneeded:b.onupgradeneeded(c),onerror:a.error,onabort:a.error,onblocked:a.error});return}b.db=d;a.success(b.context)},onupgradeneeded:b.onupgradeneeded(c),onerror:a.error,onabort:a.error,onblocked:a.error})},error:a.error})},initializeMemoryStore:function(a){var a=
$data.typeSystem.createCallbackSetting(a),b=this;b.originalContext&&b.providerConfiguration.memoryOperations?(b.operationProvider=new b.originalContext({name:"InMemory"}),b.operationProvider.onReady({success:function(){b.supportedBinaryOperators=b.operationProvider.storageProvider.supportedBinaryOperators;b.supportedSetOperations=b.operationProvider.storageProvider.supportedSetOperations;b.supportedFieldOperations=b.operationProvider.storageProvider.supportedFieldOperations;b.supportedUnaryOperators=
b.operationProvider.storageProvider.supportedUnaryOperators;a.success()},error:a.error})):a.success()},_initializeStore:function(a){var a=$data.typeSystem.createCallbackSetting(a),b=this,c=function(a){a.onversionchange=function(a){return a.target.close()};var d=[];b.context._storageModel.forEach(function(c){function e(){var i={},g=b._getKeySettings(c);b.newVersionAPI?g.autoIncrement&&d.push(c.TableName):i.autoIncrement=g.autoIncrement;void 0!==g.keyPath&&(i.keyPath=g.keyPath);a.createObjectStore(c.TableName,
i)}a.objectStoreNames.contains(c.TableName)?b.providerConfiguration.dbCreation===$data.storageProviders.DbCreationType.DropAllExistingTables&&(a.deleteObjectStore(c.TableName),e()):e()});0<d.length&&!a.objectStoreNames.contains(b.sequenceStore)&&(a.createObjectStore(b.sequenceStore,{keyPath:"store"}),d=[]);return d},d=null,e={onupgradeneeded:function(a){d=c(a.target.result)},onerror:a.error,onblocked:a.error,onsuccess:function(e){b.db=e.target.result;b.db.onversionchange=function(a){a.target.close()};
if(b.newVersionAPI){if(d&&0<d.length){var h=b.db.transaction([b.sequenceStore],b.IDBTransactionType.READ_WRITE).setCallbacks({onerror:a.error,oncomplete:function(){a.success(b.context)}}).objectStore(b.sequenceStore);switch(b.providerConfiguration.dbCreation){case $data.storageProviders.DbCreationType.DropAllExistingTables:case $data.storageProviders.DbCreationType.DropTableIfChanged:h.clear();break;default:d.forEach(function(a){h["delete"](a)})}}a.success(b.context)}else var j=b.db.setVersion(b.providerConfiguration.version.toString()).setCallbacks({onerror:a.error,
onblocked:a.error,onsuccess:function(){c(b.db);j.result.oncomplete=function(){a.success(b.context)}}})}};b.newVersionAPI?b.indexedDB.open(b.providerConfiguration.databaseName,parseInt(b.providerConfiguration.version,10)).setCallbacks(e):b.indexedDB.open(b.providerConfiguration.databaseName).setCallbacks(e)},executeQuery:function(a,b){var b=$data.typeSystem.createCallbackSetting(b),c=this,d=a.context.getEntitySetFromElementType(a.defaultType),e=c.db.transaction([d.tableName],c.IDBTransactionType.READ_ONLY).setCallbacks({onerror:b.error,
onabort:b.error,oncomplete:function(){c.operationProvider?(c.operationProvider.storageProvider.dataSource[d.tableName]=a.rawDataList,c.operationProvider.storageProvider.executeQuery(a,{success:function(a){a.expression.nodeType===$data.Expressions.ExpressionType.Count&&(a.rawDataList[0]={cnt:a.rawDataList[0]});b.success(a)},error:b.error})):b.success(a)}}).objectStore(d.tableName);Container.createModelBinderConfigCompiler(a,[]).Visit(a.expression);if(c.operationProvider)e.openCursor().onsuccess=function(b){if(b=
b.target.result)a.rawDataList.push(b.value),b["continue"]()};else switch(a.expression.nodeType){case $data.Expressions.ExpressionType.Count:e.count().onsuccess=function(b){a.rawDataList.push({cnt:b.target.result})};break;default:e.openCursor().onsuccess=function(b){if(b=b.target.result)a.rawDataList.push(b.value),b["continue"]()}}},_getKeySettings:function(a){var b=this,c={autoIncrement:!1},d=[];a.PhysicalType.memberDefinitions.getPublicMappedProperties().forEach(function(a){a.key&&d.push(a.name);
a.computed&&(a.key||Guard.raise(new Exception("Only key field can be a computed field!")),a=Container.resolveName(a.type),!0===b.supportedAutoincrementKeys[a]&&(c.autoIncrement=!0))});1<d.length?(c.autoIncrement&&Guard.raise(new Exception("Auto increment is only valid for a single key!")),c.keys=d):1==d.length?c.keyPath=d[0]:Guard.raise(new Exception("No valid key found!"));return c},saveChanges:function(a,b){function c(){if(0===e.length)a.success();else{var b={},h=e.shift().map(function(a){b[a.entitySet.tableName]=
!0;a.physicalData={};a.entitySet.elementType.memberDefinitions.getPublicMappedProperties().forEach(function(b){var c=Container.resolveName(b.type);if(b.key&&b.computed&&void 0==a.data[b.name])if("function"===typeof d.supportedAutoincrementKeys[c]){var e=d.supportedAutoincrementKeys[c]();a.data[b.name]=d.fieldConverter.toDb[c](e)}else return;if(!b.inverseProperty&&"undefined"===typeof b.concurrencyMode&&(!0===b.key||a.data.entityState===$data.EntityState.Added||a.data.changedProperties&&a.data.changedProperties.some(function(a){return a.name===
b.name})))d.fieldConverter.toDb[c]?a.physicalData[b.name]=d.fieldConverter.toDb[c](a.data[b.name]):(c=a.data[b.name],void 0!==c&&(c=JSON.parse(JSON.stringify(c))),a.physicalData[b.name]=c)});return a}),j=[],g;for(g in b)j.push(g);var i=d.db.transaction(j,d.IDBTransactionType.READ_WRITE).setCallbacks({onerror:function(b){(!b.target||!d.IDBDatabaseException||b.target&&d.IDBDatabaseException&&b.target.errorCode!==d.IDBDatabaseException.ABORT_ERR)&&a.error(b)},oncomplete:function(){c()}}),k=new function(){var a=
{};this.getSettingsForItem=function(b){var c=b.data.getType().fullName;a.hasOwnProperty(c)||(a[c]=d._getKeySettings(d.context._storageModel.getStorageModel(b.data.getType())));return a[c]}};h.forEach(function(b){var c=i.objectStore(b.entitySet.tableName),e=k.getSettingsForItem(b),g=e.keys&&e.keys.map(function(a){return b.physicalData[a]})||null;try{var f=function(l){var f=e.keyPath?b.physicalData[e.keyPath]:g,h=b.physicalData;c.openCursor(d.IDBKeyRange.only(f)).onsuccess=function(c){try{var d=c.target.result;
d?l(d,f,h):Guard.raise(new Exception("Object not found",null,b))}catch(e){i.abort(),a.error(e)}}};switch(b.data.entityState){case $data.EntityState.Added:e.keyPath?c.add(b.physicalData).onsuccess=function(a){b.data[e.keyPath]=a.target.result}:c.add(b.physicalData,g);break;case $data.EntityState.Deleted:f(function(a){a["delete"]()});break;case $data.EntityState.Modified:f(function(a,b,c){a.update($data.typeSystem.extend(a.value,c))});break;case $data.EntityState.Unchanged:break;default:Guard.raise(new Exception("Not supported entity state",
null,b))}}catch(h){i.abort(),a.error(h)}})}}var d=this,e=d.buildIndependentBlocks(b);c()},_compile:function(a){return Container.createIndexedDBCompiler().compile(a)}},{isSupported:{get:function(){return window.indexedDB||window.webkitIndexedDB||window.mozIndexedDB||window.msIndexedDB?!0:!1},set:function(){}}});$data.storageProviders.indexedDb.IndexedDBStorageProvider.isSupported&&$data.StorageProviderBase.registerProvider("indexedDb",$data.storageProviders.indexedDb.IndexedDBStorageProvider);

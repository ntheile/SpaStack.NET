// JayData 1.3.4
// Dual licensed under MIT and GPL v2
// Copyright JayStack Technologies (http://jaydata.org/licensing)
//
// JayData is a standards-based, cross-platform Javascript library and a set of
// practices to access and manipulate data from various online and offline sources.
//
// Credits:
//     Hajnalka Battancs, Dániel József, János Roden, László Horváth, Péter Nochta
//     Péter Zentai, Róbert Bónay, Szabolcs Czinege, Viktor Borza, Viktor Lázár,
//     Zoltán Gyebrovszki, Gábor Dolla
//
// More info: http://jaydata.org
(function(g,h){var i=g.Validation.Entity,d=function(a){try{return new Date(Date.parse(a))}catch(e){return new Date(0)}},k={required:{key:"required"},customValidator:{key:"customValidator",validateMethod:!0}},b={required:{key:"required"},customValidator:{key:"customValidator",validateMethod:!0},minValue:{key:"min"},maxValue:{key:"max"}},j={"$data.Number":b,"$data.Float":b,"$data.Decimal":b,"$data.Integer":b,"$data.Int16":b,"$data.Int32":b,"$data.Int64":b,"$data.Byte":b,"$data.SByte":b,"$data.String":{required:{key:"required"},
customValidator:{key:"customValidator",validateMethod:!0},minLength:{key:"minlength"},maxLength:{key:"maxlength"},length:{key:"length"},regex:{key:"regex",validateMethod:!0}},"$data.Date":{required:{key:"required"},customValidator:{key:"customValidator",validateMethod:!0},minValue:{key:"min",validateMethod:!0,converter:d},maxValue:{key:"max",validateMethod:!0,converter:d}},"$data.DateTimeOffset":{required:{key:"required"},customValidator:{key:"customValidator",validateMethod:!0},minValue:{key:"min",
validateMethod:!0,converter:d},maxValue:{key:"max",validateMethod:!0,converter:d}},"$data.Time":{required:{key:"required"},customValidator:{key:"customValidator",validateMethod:!0},minValue:{key:"min"},maxValue:{key:"max"}},"$data.Array":{required:{key:"required"},customValidator:{key:"customValidator",validateMethod:!0},length:{key:"length",validateMethod:!0}},"$data.Boolean":k,"$data.Object":k},m=function(a,e,l,c){if(a[e]){var f=j[l][e],b=f.key,d=i.getValidationValue(a,e);if(!0===f.validateMethod)b=
a.name+"_"+b,h.validator.addMethod(b,function(a){a||(a=void 0);a&&f.converter&&"function"==typeof f.converter&&(a=f.converter(a));return i.supportedValidations[l][e](a,d)},i.getValidationMessage(a,e,"Validation Error!")),c.rules[a.name]=c.rules[a.name]||{},c.rules[a.name][b]=!0;else{c.rules[a.name]=c.rules[a.name]||{};c.rules[a.name][b]=d;var g=i.getValidationMessage(a,e);g&&(c.messages[a.name]=c.messages[a.name]||{},c.messages[a.name][b]=g)}}},n=function(a,b){a.memberDefinitions.getPublicMappedProperties().forEach(function(a){var c=
Container.resolveName(Container.resolveType(a.dataType));j[c]&&Object.keys(j[c]).forEach(function(f){m(a,f,c,b)})})};g.Entity.prototype.toJQueryValidate=function(a){("undefined"===typeof h||"undefined"===typeof h.validator)&&Guard.raise(new Exception("jQuery and jQuery validator plugin is required","Not Found!"));var b=this,d={rules:{},messages:{}};n(b.getType(),d);a=g.typeSystem.createCallbackSetting(a,{});if(a.success){var c=a.success;a.success=function(a,d){h.fn.formBinder&&h(a).formBinder(b,!1);
c.apply(this,[b,a,d])}}"function"==typeof a.success&&(d.submitHandler=a.success);"function"==typeof a.error&&(d.invalidHandler=a.error);return d}})($data,jQuery);
